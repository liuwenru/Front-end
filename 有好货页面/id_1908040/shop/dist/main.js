/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./components/ScrollView.js":
/*!**********************************!*\
  !*** ./components/ScrollView.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @file ScrollView组件\n */\nvar PROPERTY_SYMBOL = Symbol('property');\nvar ATTRIBUTE_SYMBOL = Symbol('attribute');\nvar EVENT_SYMBOL = Symbol('event');\nvar STATE_SYMBOL = Symbol('state');\n\nvar ScrollView =\n/*#__PURE__*/\nfunction () {\n  function ScrollView(config) {\n    _classCallCheck(this, ScrollView);\n\n    this[PROPERTY_SYMBOL] = Object.create(null);\n    this[ATTRIBUTE_SYMBOL] = Object.create(null);\n    this[EVENT_SYMBOL] = Object.create(null);\n    this[STATE_SYMBOL] = Object.create(null);\n    this[PROPERTY_SYMBOL].children = [];\n    this.created();\n  }\n\n  _createClass(ScrollView, [{\n    key: \"appendTo\",\n    value: function appendTo(element) {\n      element.appendChild(this[PROPERTY_SYMBOL].root);\n      this.mounted();\n    }\n  }, {\n    key: \"created\",\n    value: function created() {\n      this[PROPERTY_SYMBOL].root = document.createElement('div');\n      this[PROPERTY_SYMBOL].root.addEventListener(\"touchmove\", function (e) {\n        e.cancelBubble = true;\n        e.stopImmediatePropagation();\n      }, {\n        passive: false\n      });\n      this[STATE_SYMBOL].h = 0;\n    }\n  }, {\n    key: \"mounted\",\n    value: function mounted() {}\n  }, {\n    key: \"unmount\",\n    value: function unmount() {}\n  }, {\n    key: \"update\",\n    value: function update() {}\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(child) {\n      this.children.push(child);\n      child.appendTo(this[PROPERTY_SYMBOL].root);\n    }\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute(name) {\n      if (name === 'style') {\n        return this[PROPERTY_SYMBOL].root.getAttribute('style');\n      }\n\n      return this[ATTRIBUTE_SYMBOL][name];\n    }\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(name, value) {\n      // hook\n      if (name === 'style') {\n        this[PROPERTY_SYMBOL].root.setAttribute('style', value);\n      }\n\n      return this[ATTRIBUTE_SYMBOL][name] = value;\n    }\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(name, value) {\n      this[PROPERTY_SYMBOL].root.style[name] = value;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener) {\n      if (!this[EVENT_SYMBOL][type]) {\n        this[EVENT_SYMBOL][type] = new Set();\n      }\n\n      this[EVENT_SYMBOL][type].add(listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(type, listener) {\n      if (!this[EVENT_SYMBOL][type]) {\n        return;\n      }\n\n      this[EVENT_SYMBOL][type][\"delete\"](listener);\n    }\n  }, {\n    key: \"triggerEvent\",\n    value: function triggerEvent(type) {\n      if (!this[EVENT_SYMBOL].type) {\n        return;\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this[EVENT_SYMBOL][type][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var event = _step.value;\n          event.call(this);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"children\",\n    get: function get() {\n      return this[PROPERTY_SYMBOL].children;\n    }\n  }]);\n\n  return ScrollView;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ScrollView);\n\n//# sourceURL=webpack:///./components/ScrollView.js?");

/***/ }),

/***/ "./components/TabView.js":
/*!*******************************!*\
  !*** ./components/TabView.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lib_animation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/animation.js */ \"./lib/animation.js\");\n/* harmony import */ var _lib_gesture_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/gesture.js */ \"./lib/gesture.js\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * @file TabView组件\n */\n\n\nvar PROPERTY_SYMBOL = Symbol('property');\nvar ATTRIBUTE_SYMBOL = Symbol('attribute');\nvar EVENT_SYMBOL = Symbol('event');\nvar STATE_SYMBOL = Symbol('state');\n\nvar TabView =\n/*#__PURE__*/\nfunction () {\n  function TabView(config) {\n    _classCallCheck(this, TabView);\n\n    this[PROPERTY_SYMBOL] = Object.create(null);\n    this[ATTRIBUTE_SYMBOL] = Object.create(null);\n    this[EVENT_SYMBOL] = Object.create(null);\n    this[STATE_SYMBOL] = Object.create(null);\n    this[PROPERTY_SYMBOL].children = [];\n    this[PROPERTY_SYMBOL].headers = [];\n    this[PROPERTY_SYMBOL].position = 0;\n    this[PROPERTY_SYMBOL].nextPosition = 1;\n    this[PROPERTY_SYMBOL].tl = null;\n    this.created();\n  }\n\n  _createClass(TabView, [{\n    key: \"appendTo\",\n    value: function appendTo(element) {\n      element.appendChild(this.root);\n      this.mounted();\n    }\n  }, {\n    key: \"created\",\n    value: function created() {\n      // 初始化包含tab按钮和tab内容的容器\n      this.root = document.createElement('div');\n      this.root.style.display = 'flex';\n      this.headContainer = document.createElement('div');\n      this.contentContainer = document.createElement('div');\n      this.contentContainer.style.whiteSpace = 'nowrap';\n      this.contentContainer.style.overflow = 'hidden';\n      this.contentContainer.style.height = '100%';\n      this.contentContainer.style.flex = '1';\n      this.headContainer.style.height = '93px';\n      this.root.appendChild(this.headContainer);\n      this.root.appendChild(this.contentContainer);\n      this[STATE_SYMBOL].h = 0;\n    }\n  }, {\n    key: \"mounted\",\n    value: function mounted() {\n      this._drag();\n\n      this._click();\n\n      Array.prototype.slice.call(this.headContainer.children)[0].style.borderBottom = '1px solid black';\n      Array.prototype.slice.call(this.headContainer.children)[0].style.fontWeight = 'normal';\n    }\n  }, {\n    key: \"unmountd\",\n    value: function unmountd() {}\n  }, {\n    key: \"update\",\n    value: function update() {} // tab头点击\n\n  }, {\n    key: \"_click\",\n    value: function _click() {\n      var _this = this;\n\n      var tabTitles = Array.prototype.slice.call(this.headContainer.children);\n      this.headContainer.addEventListener('click', function (event) {\n        var position = _this[PROPERTY_SYMBOL].position;\n        var nextPosition = position; // 获取当前点击的tab-title索引\n\n        var tabTitle = event.target;\n\n        for (var i = 0; i < tabTitles.length; i++) {\n          tabTitles[i].style.borderBottom = 'none';\n          tabTitles[i].style.fontWeight = 'lighter';\n\n          if (tabTitles[i] === tabTitle) {\n            // 点击之后的位置\n            nextPosition = i;\n            tabTitles[i].style.borderBottom = '1px solid black';\n            tabTitles[i].style.fontWeight = 'normal';\n          }\n        }\n\n        console.log('position', position, 'nextPosition', nextPosition); // 设置tab-content动画\n\n        if (!_this[PROPERTY_SYMBOL].tl) {\n          _this[PROPERTY_SYMBOL].tl = new _lib_animation_js__WEBPACK_IMPORTED_MODULE_0__[\"TimeLine\"]();\n        }\n\n        _this._nextPic(position, nextPosition);\n      });\n    }\n  }, {\n    key: \"_nextPic\",\n    value: function _nextPic(position, nextPosition) {\n      var tabViewWidth = window.innerWidth;\n      var current = this.contentContainer.children[position],\n          next = this.contentContainer.children[nextPosition];\n      this[PROPERTY_SYMBOL].tl.removeAllAnimations();\n\n      if (position < nextPosition) {\n        // 从右往左\n        this[PROPERTY_SYMBOL].tl.addAnimation(new _lib_animation_js__WEBPACK_IMPORTED_MODULE_0__[\"DOMElementStyleNumberAnimation\"](current, 'transform', 0, -tabViewWidth * position, 1000, -tabViewWidth - tabViewWidth * position, function (v) {\n          return \"translateX(\".concat(v, \"px)\");\n        }));\n        this[PROPERTY_SYMBOL].tl.addAnimation(new _lib_animation_js__WEBPACK_IMPORTED_MODULE_0__[\"DOMElementStyleNumberAnimation\"](next, 'transform', 0, tabViewWidth - tabViewWidth * nextPosition, 1000, -tabViewWidth * nextPosition, function (v) {\n          return \"translateX(\".concat(v, \"px)\");\n        }));\n      } else if (position > nextPosition) {\n        // 从左往右\n        this[PROPERTY_SYMBOL].tl.addAnimation(new _lib_animation_js__WEBPACK_IMPORTED_MODULE_0__[\"DOMElementStyleNumberAnimation\"](current, 'transform', 0, -tabViewWidth * position, 1000, -tabViewWidth + tabViewWidth * position, function (v) {\n          return \"translateX(\".concat(-v, \"px)\");\n        }));\n        console.log('current', -tabViewWidth * position, -tabViewWidth + tabViewWidth * position);\n        this[PROPERTY_SYMBOL].tl.addAnimation(new _lib_animation_js__WEBPACK_IMPORTED_MODULE_0__[\"DOMElementStyleNumberAnimation\"](next, 'transform', 0, tabViewWidth - tabViewWidth * nextPosition, 1000, tabViewWidth * nextPosition, function (v) {\n          return \"translateX(\".concat(-v, \"px)\");\n        }));\n        console.log('next', tabViewWidth - tabViewWidth * nextPosition, tabViewWidth * nextPosition);\n      }\n\n      this[PROPERTY_SYMBOL].tl.restart();\n      this[PROPERTY_SYMBOL].position = nextPosition;\n    } // tab内容拖拽\n\n  }, {\n    key: \"_drag\",\n    value: function _drag() {\n      var _this2 = this;\n\n      Object(_lib_gesture_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.contentContainer);\n      var tabViewWidth = window.innerWidth;\n      var offset = 0;\n      this.contentContainer.addEventListener('mousedown', function (event) {\n        console.log('mousedown');\n        var currentTime = Date.now();\n\n        if (currentTime - _this2[PROPERTY_SYMBOL].offsetTimeStart < 1000) {\n          offset = tabViewWidth - Object(_lib_animation_js__WEBPACK_IMPORTED_MODULE_0__[\"ease\"])((currentTime - _this2[PROPERTY_SYMBOL].offsetTimeStart) / 1000) * tabViewWidth;\n        } else {\n          offset = 0;\n        }\n        /*\n        clearTimeout(this[PROPERTY_SYMBOL].nextPicTimer);\n        this[PROPERTY_SYMBOL].nextPicTimer = null;\n        */\n\n      }); // 将拖拽改造成轮播的思路以适应动画\n\n      this.contentContainer.addEventListener('pan', function (event) {\n        if (event.isVertical) {\n          return;\n        }\n\n        console.log('pan'); // 拖拽适应轮播\n\n        event.preventDefault();\n        var children = _this2[PROPERTY_SYMBOL].children;\n        var position = _this2[PROPERTY_SYMBOL].position;\n        var current = children[position];\n        var nextPosition = (position + 1) % children.length;\n        var next = children[nextPosition];\n        var lastPosition = (children.length + position - 1) % children.length; // 代替循环\n\n        var last = children[lastPosition]; // 拖拽的是Scroll\n\n        last.setStyle('transition', 'ease 0s');\n        last.setStyle('transform', \"translate(\".concat(-tabViewWidth - tabViewWidth * lastPosition + event.dx + offset, \"px)\"));\n        next.setStyle('transition', 'ease 0s');\n        next.setStyle('transform', \"translate(\".concat(tabViewWidth - tabViewWidth * lastPosition + event.dx + offset, \"px)\"));\n        current.setStyle('transition', 'ease 0s');\n        current.setStyle('transform', \"translate(\".concat(-tabViewWidth * lastPosition + event.dx + offset, \"px)\"));\n      });\n      this.contentContainer.addEventListener('panend', function (event) {\n        event.preventDefault();\n        var children = _this2[PROPERTY_SYMBOL].children;\n        if (event.isVertical) return;\n        var isLeft;\n\n        if (event.isFlick) {\n          // x分量大于y的分量才触发\n          // console.log('flick');\n          if (event.dx > 0) {\n            _this2[PROPERTY_SYMBOL].position = _this2[PROPERTY_SYMBOL].position - 1;\n            isLeft = true;\n          }\n\n          if (event.dx < 0) {\n            _this2[PROPERTY_SYMBOL].position = _this2[PROPERTY_SYMBOL].position + 1;\n            isLeft = false;\n          }\n        } else {\n          if (event.dx > tabViewWidth / 2) {\n            _this2[PROPERTY_SYMBOL].position = _this2[PROPERTY_SYMBOL].position - 1;\n            isLeft = true;\n          } else if (event.dx < -tabViewWidth / 2) {\n            _this2[PROPERTY_SYMBOL].position = _this2[PROPERTY_SYMBOL].position + 1;\n            isLeft = false;\n          } else if (event.dx > 0) {\n            isLeft = false;\n          } else {\n            isLeft = true;\n          }\n        } // 处理边界情况\n\n\n        _this2[PROPERTY_SYMBOL].position = (children.length + _this2[PROPERTY_SYMBOL].position) % children.length; // 拖拽适应轮播\n\n        var current = children[_this2[PROPERTY_SYMBOL].position];\n        var nextPosition = (_this2[PROPERTY_SYMBOL].position + 1) % children.length;\n        var next = children[nextPosition];\n        var lastPosition = (children.length + _this2[PROPERTY_SYMBOL].position - 1) % children.length;\n        var last = children[lastPosition];\n\n        if (!isLeft) {\n          last.setStyle('transition', '');\n        } else {\n          last.setStyle('transition', 'ease 0s');\n        }\n\n        last.setStyle('transform', \"translate(\".concat(-tabViewWidth - tabViewWidth * lastPosition, \"px)\"));\n\n        if (isLeft) {\n          next.setStyle('transition', '');\n        } else {\n          next.setStyle('transition', 'ease 0s');\n        }\n\n        last.setStyle('transform', \"translate(\".concat(tabViewWidth - tabViewWidth * nextPosition, \"px)\"));\n        current.setStyle('transition', '');\n        current.setStyle('transform', \"translate(\".concat(-tabViewWidth * _this2[PROPERTY_SYMBOL].position, \"px)\")); // 设置tab-title激活样式\n\n        var titles = Array.prototype.slice.call(_this2.headContainer.children);\n\n        for (var i = 0; i < titles.length; i++) {\n          titles[i].style.borderBottom = 'none';\n          titles[i].style.fontWeight = 'lighter';\n\n          if (i === _this2[PROPERTY_SYMBOL].position) {\n            titles[i].style.borderBottom = '1px solid black';\n            titles[i].style.fontWeight = 'normal';\n          }\n        }\n      }); // 阻止图片鼠标默认的拖拽行为\n\n      /*\n      this.contentContainer.addEventListener('mousedown', event =>\n        event.preventDefault()\n      );\n      document.addEventListener('touchmove', event => event.preventDefault(), {\n        passive: false\n      });\n      */\n    }\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(child) {\n      this.children.push(child);\n      var title = child.getAttribute('tab-title') || '';\n      this[PROPERTY_SYMBOL].headers.push(title);\n      var header = document.createElement('div');\n      header.innerText = title;\n      header.style.display = 'inline-block';\n      header.style.fontSize = '23px';\n      header.style.fontFamily = 'PingFang SC';\n      header.style.fontWeight = 'lighter';\n      header.style.margin = '30px 15px 0 15px'; // 注意 innerText和textContent的不同   https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent#Differences_from_innerText\n\n      this.headContainer.appendChild(header);\n      child.appendTo(this.contentContainer);\n\n      for (var i = 0; i < this.contentContainer.children.length; i++) {\n        this.contentContainer.children[i].style.width = '100%';\n        this.contentContainer.children[i].style.height = '100%';\n        this.contentContainer.children[i].style.display = 'inline-block';\n      }\n    }\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute(name) {\n      if (name === 'style') {\n        return this.root.getAttribute('style');\n      }\n\n      return this[ATTRIBUTE_SYMBOL][name];\n    }\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(name, value) {\n      // hook\n      if (name === 'style') {\n        this.root.setAttribute('style', value);\n        this.root.style.display = 'flex';\n        this.root.style.flexDirection = 'column';\n      }\n\n      return this[ATTRIBUTE_SYMBOL][name] = value;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener) {\n      if (!this[EVENT_SYMBOL][type]) {\n        this[EVENT_SYMBOL][type] = new Set();\n      }\n\n      this[EVENT_SYMBOL][type].add(listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(type, listener) {\n      if (!this[EVENT_SYMBOL][type]) {\n        return;\n      }\n\n      this[EVENT_SYMBOL][type][\"delete\"](listener);\n    }\n  }, {\n    key: \"triggerEvent\",\n    value: function triggerEvent(type) {\n      if (!this[EVENT_SYMBOL].type) {\n        return;\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this[EVENT_SYMBOL][type][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var event = _step.value;\n          event.call(this);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"children\",\n    get: function get() {\n      return this[PROPERTY_SYMBOL].children;\n    }\n  }]);\n\n  return TabView;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (TabView);\n\n//# sourceURL=webpack:///./components/TabView.js?");

/***/ }),

/***/ "./components/TextView.js":
/*!********************************!*\
  !*** ./components/TextView.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar PROPERTY_SYMBOL = Symbol('property');\nvar ATTRIBUTE_SYMBOL = Symbol('attribute');\nvar EVENT_SYMBOL = Symbol('event');\nvar STATE_SYMBOL = Symbol('state');\n\nvar TextView =\n/*#__PURE__*/\nfunction () {\n  function TextView(config) {\n    _classCallCheck(this, TextView);\n\n    this[PROPERTY_SYMBOL] = Object.create(null);\n    this[ATTRIBUTE_SYMBOL] = Object.create(null);\n    this[EVENT_SYMBOL] = Object.create(null);\n    this[STATE_SYMBOL] = Object.create(null);\n    this.text = config || '';\n    this[PROPERTY_SYMBOL].children = [];\n    this.created();\n  }\n\n  _createClass(TextView, [{\n    key: \"appendTo\",\n    value: function appendTo(element) {\n      element.appendChild(this[PROPERTY_SYMBOL].root);\n      this.mounted();\n    }\n  }, {\n    key: \"created\",\n    value: function created() {\n      this[PROPERTY_SYMBOL].root = document.createElement('span');\n      this[PROPERTY_SYMBOL].root.innerText = this.text;\n    }\n  }, {\n    key: \"mounted\",\n    value: function mounted() {}\n  }, {\n    key: \"unmount\",\n    value: function unmount() {}\n  }, {\n    key: \"update\",\n    value: function update() {}\n  }, {\n    key: \"appendChild\",\n    value: function appendChild(child) {\n      this.children.push(child);\n      child.appendTo(this[PROPERTY_SYMBOL].root);\n    }\n  }, {\n    key: \"getAttribute\",\n    value: function getAttribute(name) {\n      if (name === 'style') {\n        return this[PROPERTY_SYMBOL].root.getAttribute('style');\n      }\n\n      return this[ATTRIBUTE_SYMBOL][name];\n    }\n  }, {\n    key: \"setAttribute\",\n    value: function setAttribute(name, value) {\n      // hook\n      if (name === 'style') {\n        this[PROPERTY_SYMBOL].root.setAttribute('style', value);\n      }\n\n      return this[ATTRIBUTE_SYMBOL][name] = value;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener) {\n      if (!this[EVENT_SYMBOL][type]) {\n        this[EVENT_SYMBOL][type] = new Set();\n      }\n\n      this[EVENT_SYMBOL][type].add(listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(type, listener) {\n      if (!this[EVENT_SYMBOL][type]) {\n        return;\n      }\n\n      this[EVENT_SYMBOL][type][\"delete\"](listener);\n    }\n  }, {\n    key: \"triggerEvent\",\n    value: function triggerEvent(type) {\n      if (!this[EVENT_SYMBOL].type) {\n        return;\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this[EVENT_SYMBOL][type][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var event = _step.value;\n          event.call(this);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n            _iterator[\"return\"]();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"children\",\n    get: function get() {\n      return this[PROPERTY_SYMBOL].children;\n    }\n  }]);\n\n  return TextView;\n}();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (TextView);\n\n//# sourceURL=webpack:///./components/TextView.js?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _components_TabView_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/TabView.js */ \"./components/TabView.js\");\n/* harmony import */ var _components_ScrollView_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/ScrollView.js */ \"./components/ScrollView.js\");\n/* harmony import */ var _components_TextView_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/TextView.js */ \"./components/TextView.js\");\n\n\n // jsx的实现原理\n\nfunction create(Class, attributes) {\n  var object = new Class();\n\n  for (var name in attributes) {\n    // attribute\n    object.setAttribute(name, attributes[name]);\n  }\n\n  for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    children[_key - 2] = arguments[_key];\n  }\n\n  for (var _i = 0, _children = children; _i < _children.length; _i++) {\n    var child = _children[_i];\n\n    if (typeof child === 'string') {\n      object.appendChild(new _components_TextView_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](child));\n    } else {\n      object.appendChild(child);\n    }\n  }\n\n  return object;\n}\n\nvar c = create(_components_TabView_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"], {\n  style: \"width:100%;height:100%;\"\n}, create(_components_ScrollView_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n  \"tab-title\": \"\\u63A8\\u8350\",\n  style: \"-webkit-overflow-scrolling:touch;overflow:scroll;white-space:normal;background-color:lightblue;font-size:50px;\"\n}, \"\\u63A8\\u8350\"), create(_components_ScrollView_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n  \"tab-title\": \"\\u6709\\u8DA3\\u7684\\u5E97\",\n  style: \"-webkit-overflow-scrolling:touch;overflow:scroll;white-space:normal;background-color:lightblue;font-size:50px;\"\n}, \"\\u6709\\u8DA3\\u7684\\u5E97\"), create(_components_ScrollView_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n  \"tab-title\": \"\\u54C1\\u724C\\u65B0\\u5E97\",\n  style: \"-webkit-overflow-scrolling:touch;overflow:scroll;white-space:normal;background-color:lightblue;font-size:50px;\"\n}, \"\\u54C1\\u724C\\u65B0\\u5E97\"));\nc.appendTo(document.body);\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "./lib/animation.js":
/*!**************************!*\
  !*** ./lib/animation.js ***!
  \**************************/
/*! exports provided: ease, TimeLine, DOMElementStyleNumberAnimation, DOMElementStyleVectorAnimation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ease\", function() { return ease; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TimeLine\", function() { return TimeLine; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DOMElementStyleNumberAnimation\", function() { return DOMElementStyleNumberAnimation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DOMElementStyleVectorAnimation\", function() { return DOMElementStyleVectorAnimation; });\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction cubicBezier(p1x, p1y, p2x, p2y) {\n  var ZERO_LIMIT = 1e-6; // Calculate the polynomial coefficients,\n  // implicit first and last control points are (1,0) and (1,1).\n\n  var ax = 3 * p1x - 3 * p2x + 1;\n  var bx = 3 * p2x - 6 * p1x;\n  var cx = 3 * p1x;\n  var ay = 3 * p1y - 3 * p2y + 1;\n  var by = 3 * p2y - 6 * p1y;\n  var cy = 3 * p1y;\n\n  function sampleCurveDerivativeX(t) {\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner 's rule.\n    return (3 * ax * t + 2 * bx) * t + cx;\n  }\n\n  function sampleCurveX(t) {\n    return ((ax * t + bx) * t + cx) * t;\n  }\n\n  function sampleCurveY(t) {\n    return ((ay * t + by) * t + cy) * t;\n  } // Given an x value, find a parametric value it came from.\n\n\n  function solveCurveX(x) {\n    var t2 = x;\n    var derivative;\n    var x2; // https://trac.webkit.org/browser/trunk/Source/WebCore/platform/animation\n    // First try a few iterations of Newton's method -- normally very fast.\n    // http://en.wikipedia.org/wiki/Newton's_method\n\n    for (var i = 0; i < 8; i++) {\n      // f(t)-x=0\n      x2 = sampleCurveX(t2) - x;\n\n      if (Math.abs(x2) < ZERO_LIMIT) {\n        return t2;\n      }\n\n      derivative = sampleCurveDerivativeX(t2); // == 0, failure\n\n      /* istanbul ignore if */\n\n      if (Math.abs(derivative) < ZERO_LIMIT) {\n        break;\n      }\n\n      t2 -= x2 / derivative;\n    } // Fall back to the bisection method for reliability.\n    // bisection\n    // http://en.wikipedia.org/wiki/Bisection_method\n\n\n    var t1 = 1;\n    /* istanbul ignore next */\n\n    var t0 = 0;\n    /* istanbul ignore next */\n\n    t2 = x;\n    /* istanbul ignore next */\n\n    while (t1 > t0) {\n      x2 = sampleCurveX(t2) - x;\n\n      if (Math.abs(x2) < ZERO_LIMIT) {\n        return t2;\n      }\n\n      if (x2 > 0) {\n        t1 = t2;\n      } else {\n        t0 = t2;\n      }\n\n      t2 = (t1 + t0) / 2;\n    } // Failure\n\n\n    return t2;\n  }\n\n  function solve(x) {\n    return sampleCurveY(solveCurveX(x));\n  }\n\n  return solve;\n}\n\nvar linear = cubicBezier(0, 0, 1, 1);\nvar ease = cubicBezier(.25, .1, .25, 1);\nvar easeIn = cubicBezier(.42, 0, 1, 1);\nvar easeOut = cubicBezier(0, 0, .58, 1);\nvar easeInOut = cubicBezier(.42, 0, .58, 1);\nvar myCB = cubicBezier(.69, -0.85, .25, 1); // 时间线\n// 位置有误差，如何解决不精准的问题\n\nvar TimeLine =\n/*#__PURE__*/\nfunction () {\n  // inited started paused 三种状态\n  function TimeLine() {\n    _classCallCheck(this, TimeLine);\n\n    this._animations = [];\n    this.status = 'inited';\n    this._rate = 1; // 播放速率\n\n    this._startPoint = 0;\n  } // 暂停\n\n\n  _createClass(TimeLine, [{\n    key: \"pause\",\n    value: function pause() {\n      if (this.status !== 'started') {\n        return;\n      }\n\n      this.status = 'paused';\n      this._resumeTick = this._tick;\n      this._tick = null;\n      this._pauseStart = Date.now();\n    } // 重新启动\n\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      if (this.status !== 'paused') {\n        return;\n      }\n\n      this.pauseTime += Date.now() - this._pauseStart;\n      this._tick = this._resumeTick;\n      requestAnimationFrame(this._tick);\n    } // 开始\n\n  }, {\n    key: \"start\",\n    value: function start() {\n      var _this = this;\n\n      if (this.status === 'started') {\n        return;\n      }\n\n      this.status = 'started';\n      var startTime = Date.now();\n      this.pauseTime = 0;\n\n      this._tick = function () {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = _this._animations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var animation = _step.value;\n\n            if (!animation.finished) {\n              animation.tick((Date.now() - _this.pauseTime - startTime) * _this._rate + _this._startPoint);\n            }\n          } // this._timer = setTimeout(this._tick, 16);\n\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n              _iterator[\"return\"]();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        if (_this._tick) {\n          // 没有 _tick时不执行\n          requestAnimationFrame(_this._tick);\n        }\n      }; // 1秒60帧   1000 / 60 16毫秒\n      // this._timer = setTimeout(this._tick, 16);\n\n\n      requestAnimationFrame(this._tick);\n    }\n  }, {\n    key: \"restart\",\n    value: function restart() {\n      var _this2 = this;\n\n      // 清理一些状态信息\n      if (this._tick) {\n        this._tick = null;\n      }\n\n      this._resumeTick = null;\n      this.status = 'inited';\n      requestAnimationFrame(function () {\n        return _this2.start();\n      });\n    } // 从什么时间点开始\n\n  }, {\n    key: \"addAnimation\",\n    // 添加动画\n    value: function addAnimation(animation) {\n      this._animations.push(animation);\n    } // 移除动画\n\n  }, {\n    key: \"removeAnimation\",\n    value: function removeAnimation(animation) {} // 移除所有动画\n\n  }, {\n    key: \"removeAllAnimations\",\n    value: function removeAllAnimations() {\n      this._animations = [];\n    }\n  }, {\n    key: \"startPoint\",\n    set: function set(value) {\n      this._startPoint = value;\n    },\n    get: function get() {\n      return this._startPoint;\n    } // rate属性\n\n  }, {\n    key: \"rate\",\n    set: function set(value) {\n      this._rate = value;\n    },\n    get: function get() {\n      return this._rate;\n    }\n  }]);\n\n  return TimeLine;\n}(); // 元素位置样式动画\n\n\nvar DOMElementStyleNumberAnimation =\n/*#__PURE__*/\nfunction () {\n  // 元素 特性 开始时间 ...\n  function DOMElementStyleNumberAnimation(element, property, startTime, startValue, endTime, endValue, converter) {\n    _classCallCheck(this, DOMElementStyleNumberAnimation);\n\n    this._element = element;\n    this._property = property;\n    this._startTime = startTime;\n    this._startValue = startValue;\n    this._endTime = endTime;\n    this._endValue = endValue;\n    this._converter = converter; // this.finished = false;\n\n    this._fixKeyFrame = false;\n  } // 接收时间线参数 -- 当前动画进度\n\n\n  _createClass(DOMElementStyleNumberAnimation, [{\n    key: \"tick\",\n    value: function tick(t) {\n      if (t > this._endTime) {\n        // console.log(t, this._endTime);\n        // 不准的原因是传入最后一帧的参数t，和调用者传入的时间不对应\n        // 解决: 修正动画最后进入的时间\n        // this.finished = true;\n        if (!this._fixKeyFrame) {\n          return;\n        } else {\n          t = this._endTime;\n          this._fixKeyFrame = false;\n        }\n      } else if (t < this._startTime) {\n        if (!this._fixKeyFrame) {\n          return;\n        } else {\n          t = this._startTime;\n          this._fixKeyFrame = false;\n        }\n      } else {\n        this._fixKeyFrame = true;\n      } // 线性插值  当前时间过去的比例 * \n      // 时间进展百分比 0 - 1\n\n\n      var progess = (t - this._startTime) / (this._endTime - this._startTime); // 增量，这段时间要移动的区段   -- 匀速插值方法\n\n      var displacement = ease(progess) * (this._endValue - this._startValue); // 正弦\n      // let displacement = Math.sin(progess * Math.PI / 2) * (this._endValue - this._startValue);\n      // 当前值 = 开始值 + 增量\n\n\n      var currentValue = this._startValue + displacement;\n      this._element.style[this._property] = this._converter(currentValue);\n    }\n  }]);\n\n  return DOMElementStyleNumberAnimation;\n}();\n/* 元素颜色样式动画 */\n\n\nvar DOMElementStyleVectorAnimation =\n/*#__PURE__*/\nfunction () {\n  // 元素 特性 开始时间 ...\n  function DOMElementStyleVectorAnimation(element, property, startTime, startValue, endTime, endValue, converter) {\n    _classCallCheck(this, DOMElementStyleVectorAnimation);\n\n    this._element = element;\n    this._property = property;\n    this._startTime = startTime;\n    this._startValue = startValue;\n    this._endTime = endTime;\n    this._endValue = endValue;\n    this._converter = converter; // this.finished = false;\n\n    this._fixKeyFrame = false;\n  } // 接收时间线参数 -- 当前动画进度\n\n\n  _createClass(DOMElementStyleVectorAnimation, [{\n    key: \"tick\",\n    value: function tick(t) {\n      if (t > this._endTime) {\n        // console.log(t, this._endTime);\n        // 不准的原因是传入最后一帧的参数t，和调用者传入的时间不对应\n        // 解决: 修正动画最后进入的时间\n        // this.finished = true;\n        if (!this._fixKeyFrame) {\n          return;\n        } else {\n          t = this._endTime;\n          this._fixKeyFrame = false;\n        }\n      } else if (t < this._startTime) {\n        if (!this._fixKeyFrame) {\n          return;\n        } else {\n          t = this._startTime;\n          this._fixKeyFrame = false;\n        }\n      } else {\n        this._fixKeyFrame = true;\n      } // 线性插值  当前时间过去的比例 * \n      // 时间进展百分比 0 - 1\n\n\n      var progess = (t - this._startTime) / (this._endTime - this._startTime);\n      var displacement = [];\n      var currentValue = [];\n\n      for (var i = 0; i < this._endValue.length; i++) {\n        displacement[i] = ease(progess) * (this._endValue[i] - this._startValue[i]);\n        currentValue[i] = this._startValue[i] + displacement[i];\n      } // 增量，这段时间要移动的区段   -- 匀速插值方法\n      // let displacement = ease(progess) * (this._endValue - this._startValue);\n      // 正弦\n      // let displacement = Math.sin(progess * Math.PI / 2) * (this._endValue - this._startValue);\n      // // 当前值 = 开始值 + 增量\n      // let currentValue = this._endValue + displacement;\n\n\n      this._element.style[this._property] = this._converter(currentValue);\n    }\n  }]);\n\n  return DOMElementStyleVectorAnimation;\n}();\n\n\n\n//# sourceURL=webpack:///./lib/animation.js?");

/***/ }),

/***/ "./lib/gesture.js":
/*!************************!*\
  !*** ./lib/gesture.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\n * 手势库\n * 支持移动端 tap轻触 pan拖拽 press按压\n * @param {object} main \n */\nfunction enableGesture(main) {\n  // 抹平鼠标事件和touch事件的差异\n  var start = function start(point, context) {\n    // console.log('start');\n    context.startX = point.clientX;\n    context.startY = point.clientY;\n    context.startTime = Date.now();\n    context.isTap = true;\n    context.isPan = false;\n    context.isPress = false; // 长按，手移动开变成pan\n\n    context.pressHandler = setTimeout(function () {\n      context.isPress = true;\n      context.isTap = false;\n      var e = new Event('pressstart');\n      main.dispatchEvent(e);\n      context.pressHandler = null;\n    }, 500);\n  };\n\n  var move = function move(point, context) {\n    var dx = point.clientX - context.startX; // x轴位移\n\n    var dy = point.clientY - context.startY; // y轴位移\n\n    /*\n    // 如果水平移动距离大于图片一半宽度时，则停止移动\n    if (Math.abs(dx) > main.clientWidth / 2)\n        return;\n    */\n    // 如果x、y移动距离之和大于100，则就不是tap而是pan\n\n    if (dx * dx + dy * dy > 100) {\n      if (context.pressHandler !== null) {\n        // 如果pressHandler存在，则将其清除\n        clearTimeout(context.pressHandler);\n        context.pressHandler = null;\n        context.isPress = false;\n      } else if (context.isPress) {\n        var e = new Event('presscancel');\n        main.dispatchEvent(e);\n      }\n\n      context.isTap = false;\n\n      if (context.isPan === false) {\n        if (Math.abs(dx) > Math.abs(dy)) {\n          context.isVertical = false;\n          context.isHorizontal = true;\n        } else {\n          context.isVertical = true;\n          context.isHorizontal = false;\n        } // 注册panstart事件\n\n\n        var _e = new Event('panstart');\n\n        _e.startX = context.startX;\n        _e.startY = context.startY;\n        main.dispatchEvent(_e);\n        context.isPan = true;\n      }\n    }\n\n    if (context.isPan) {\n      // 注册pan事件\n      var _e2 = new Event('pan');\n\n      _e2.dx = dx;\n      _e2.dy = dy;\n      _e2.isHorizontal = context.isHorizontal;\n      _e2.isVertical = context.isVertical;\n      main.dispatchEvent(_e2);\n    }\n  };\n\n  var end = function end(point, context) {\n    if (context.pressHandler !== null) {\n      clearTimeout(context.pressHandler);\n    } // console.log('end');\n\n\n    if (context.isPress) {\n      var e = new Event('pressend');\n      main.dispatchEvent(e);\n    }\n\n    if (context.isTap) {\n      var _e3 = new Event('tap');\n\n      main.dispatchEvent(_e3);\n    }\n\n    var dx = point.clientX - context.startX;\n    var dy = point.clientY - context.startY;\n    var v = Math.sqrt(dx * dx + dy * dy) / (Date.now() - context.startTime); // console.log(v);\n\n    if (context.isPan && v > 0.3) {\n      context.isFlick = true;\n\n      var _e4 = new Event('flick');\n\n      _e4.dx = dx;\n      _e4.dy = dy;\n      main.dispatchEvent(_e4);\n    } else {\n      context.isFlick = false;\n    }\n\n    if (context.isPan) {\n      var _e5 = new Event('panend');\n\n      _e5.dx = dx;\n      _e5.dy = dy;\n      _e5.isHorizontal = context.isHorizontal;\n      _e5.isVertical = context.isVertical;\n      _e5.isFlick = context.isFlick;\n      main.dispatchEvent(_e5);\n    }\n  };\n\n  var cancel = function cancel(point, context) {\n    if (context.isPan) {\n      var e = new Event('pancancel');\n      main.dispatchEvent(e);\n    }\n\n    if (context.isPress) {\n      var _e6 = new Event('presscancel');\n\n      main.dispatchEvent(_e6);\n    }\n\n    if (context.pressHandler !== null) {\n      // touchcancel时如果，pressHandler不为null\n      // 则说明当前不是pan状态, 触发pancancel事件\n      // 并清除pressHandler\n      var _e7 = new Event('pancancel');\n\n      main.dispatchEvent(_e7);\n      clearTimeout(context.pressHandler);\n    }\n  }; // 全局contexts  解决 多根手指的问题\n  // 凡是用hash表的都用Object.create\n\n\n  var contexts = Object.create(null);\n  var mouseSymbol = Symbol('mouse'); // 鼠标只有1个\n\n  var mousedown = function mousedown(event) {\n    document.addEventListener('mousemove', mousemove);\n    document.addEventListener('mouseup', mouseup);\n    contexts[mouseSymbol] = Object.create(null);\n    start(event, contexts[mouseSymbol]);\n  };\n\n  var mousemove = function mousemove(event) {\n    move(event, contexts[mouseSymbol]);\n  };\n\n  var mouseup = function mouseup(event) {\n    document.removeEventListener('mousemove', mousemove);\n    document.removeEventListener('mouseup', mouseup);\n    end(event, contexts[mouseSymbol]);\n    delete contexts[mouseSymbol];\n  }; // clientX 相对于视口，不会轻易变动\n\n\n  main.addEventListener('mousedown', mousedown);\n\n  var touchstart = function touchstart(event) {\n    // TouchEvent.changedTouches\n    // 一个 TouchList 对象，包含了代表所有从上一次触摸事件到此次事件过程中，\n    // 状态发生了改变的触点的 Touch 对象。 https://developer.mozilla.org/zh-CN/docs/Web/API/Touch\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = event.changedTouches[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var touch = _step.value;\n        // Touch.identifier\n        // 此 Touch 对象的唯一标识符. 一次触摸动作(我们指的是手指的触摸)在平面上移动的整个过程中, 该标识符不变. \n        // 可以根据它来判断跟踪的是否是同一次触摸过程. 只读属性.\n        contexts[touch.indentifier] = Object.create(null);\n        start(touch, contexts[touch.indentifier]);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator[\"return\"] != null) {\n          _iterator[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  };\n\n  var touchmove = function touchmove(event) {\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = event.changedTouches[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var touch = _step2.value;\n        move(touch, contexts[touch.indentifier]);\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2[\"return\"] != null) {\n          _iterator2[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n  }; // 注意touchcancel和touchend的区别\n\n\n  var touchend = function touchend(event) {\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n      for (var _iterator3 = event.changedTouches[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n        var touch = _step3.value;\n        end(touch, contexts[touch.indentifier]);\n        delete contexts[touch.indentifier]; // 防止contexts中的对象积累过多\n      }\n    } catch (err) {\n      _didIteratorError3 = true;\n      _iteratorError3 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion3 && _iterator3[\"return\"] != null) {\n          _iterator3[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError3) {\n          throw _iteratorError3;\n        }\n      }\n    }\n  };\n\n  var touchcancel = function touchcancel(event) {\n    var _iteratorNormalCompletion4 = true;\n    var _didIteratorError4 = false;\n    var _iteratorError4 = undefined;\n\n    try {\n      for (var _iterator4 = event.changedTouches[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n        var touch = _step4.value;\n        cancel(touch, contexts[touch.indentifier]);\n        delete contexts[touch.identifier];\n      }\n    } catch (err) {\n      _didIteratorError4 = true;\n      _iteratorError4 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion4 && _iterator4[\"return\"] != null) {\n          _iterator4[\"return\"]();\n        }\n      } finally {\n        if (_didIteratorError4) {\n          throw _iteratorError4;\n        }\n      }\n    }\n  }; // clientX 相对于视口，不会轻易变动\n\n\n  main.addEventListener('touchstart', touchstart);\n  main.addEventListener('touchmove', touchmove);\n  main.addEventListener('touchend', touchend);\n  main.addEventListener('touchcancel', touchcancel);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (enableGesture);\n\n//# sourceURL=webpack:///./lib/gesture.js?");

/***/ })

/******/ });